package com.jeromelacote.color_match{	import com.jeromelacote.color_match.PopupEvent;	import com.jeromelacote.mylib.FileUtilities;	import com.jeromelacote.mylib.UIEventDispatcher;		import flash.display.MovieClip;	import flash.events.MouseEvent;
	public class PopupLevelSelect extends PopupLevelSelect_mc	{		private var levelCollec:Array= new Array("level01","level02","level03","level04","level05","level06","level07","level08","level09","level10","level11","level12","level13","level14","level15","level16","level17","level18","level19","level20","level21","level22","level23","level24","level25","level26","level27","level28","level29","level30","level31","level32","level33","level34","level35","level36","level37","level38");		private var mydata:FileUtilities=new FileUtilities();		private var maxPage:Number=4;				public function PopupLevelSelect(page:Number,locklevel):void		{			trace ("PopupLevelSelect");			//unlockLevel=StorageManager.instance.unlockLevel;			Populate(StorageManager.instance.currentPage);			left_btn.addEventListener(MouseEvent.CLICK, onClick);			right_btn.addEventListener(MouseEvent.CLICK, onClick);			right_btn.mouseChildren=false;		}				public function onClick(e:MouseEvent):void		{			trace ("->onClick");			if (e.target==left_btn){				if(StorageManager.instance.currentPage>1){					StorageManager.instance.currentPage--;					Populate(StorageManager.instance.currentPage);									}			}else if(e.target==right_btn){				if(	StorageManager.instance.unlockLevel<StorageManager.instance.currentPage){					trace ("BUY NEW SCENES");					var revt:PopupEvent = new PopupEvent( PopupEvent.ON_SHOWUNLOCKPOPUP );					revt.data=new Array(StorageManager.instance.unlockLevel,StorageManager.instance.unlockLevel);					trace("ON_SHOWUNLOCKPOPUP."+StorageManager.instance.unlockLevel);					UIEventDispatcher.INSTANCE.dispatchEvent(revt);				}else{					if(StorageManager.instance.currentPage<maxPage){						StorageManager.instance.currentPage++;					Populate(StorageManager.instance.currentPage);					}				}			}			var revt2:PopupEvent = new PopupEvent( PopupEvent.ON_UPDATEPAGE );			revt2.data=new Array(StorageManager.instance.currentPage,StorageManager.instance.currentPage);			trace("ON_UPDATEPAGE."+StorageManager.instance.currentPage);			UIEventDispatcher.INSTANCE.dispatchEvent(revt2);					}				public function updateArrows():void{						if(StorageManager.instance.currentPage==1){				this.left_btn.visible=false;			}else{				this.left_btn.visible=true;			}						if(StorageManager.instance.currentPage==maxPage){				right_btn.visible=false;			}else{				right_btn.visible=true;			}				}				public function Populate(page:Number):void{			updateArrows();						//check unlocklevel			trace ("unlockLevel: "+	StorageManager.instance.unlockLevel+"currentPage: "+StorageManager.instance.currentPage)			if(	StorageManager.instance.unlockLevel<StorageManager.instance.currentPage){				right_btn.plus_gfx.visible=true;			}else{				right_btn.plus_gfx.visible=false;			}			var startID:Number=(page-1)*9;			var endID:Number=(page)*9;				var originX:int=62;			var originY:int=250;			var padX:int=280-62;			var padY:int=472-250;			var col=0; var row=0;			for (var i:Number=startID; i<endID; i++) {				var mc:Level_selection_item= new Level_selection_item();				this.addChild(mc);				mc.x=originX +(col*padX);				mc.y=originY +(row*padY);				trace (col +"-"+row);				mc.init(i);				col++;				if (col>2){col=0;row++}							}			//for (var i:Number=startID; i<endID; i++) {				//var mc=this[levelCollec[i-((page-1)*9)]];				//trace("-----POPULATE"+ this[levelCollec[i-((page-1)*9)]] );				//(mc as Level_selection_item).init(i);	;			//}			var myscore:Number=StorageManager.instance.topScore;//Number(mydata.Read("StoreScore"));			if(myscore<=0){bestScore_mc.visible=false;			} else {				bestScore_mc.bestscore_txt.text=myscore.toString();			}				}									}}