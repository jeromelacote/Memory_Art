package com.jeromelacote.mylib{		import flash.filesystem.File;	import flash.filesystem.FileMode;	import flash.filesystem.FileStream;
	public class FileUtilities	{			// If the File falls under point 2 of rejection note			public var cacheDir:File= null;			// If the new File falls under point 3 of rejection note			public var tempDir:File=null;			public var originalFile:File;			public var file:File;					public function FileUtilities()		{			// check to see if the file exists in the applicationStorageDirectory			//if (!File.applicationStorageDirectory.resolvePath("data/filename.dat").exists) copyFile("filename.dat");						//Initialize the Objects with proper paths.			var str:String = File.applicationDirectory.nativePath;			cacheDir= new File(str +"/\.\./Library/Caches");			tempDir = new File(str +"/\.\./tmp");		}				public function Write(fileARG:String,str:String):String		{			var ret:String= "0";			try {			var fr:FileStream=new FileStream();			var zefile:File=new File(File.applicationStorageDirectory.nativePath+"/"+fileARG+".txt")			//var zefile:File=new File(File.applicationDirectory.nativePath+"/\.\./Library/Caches");				fr.open(zefile,FileMode.WRITE);			fr.writeUTF(str);			fr.close();			ret= "success";			} catch(e:Error) {				ret= "error: "+e.toString();				}			return ret;		}		public function Read(fileARG:String):String		{			var ret:String= "0";			try {			var fr:FileStream=new FileStream();				//fr.open(cacheDir.resolvePath(file),FileMode.READ);			fr.open(new File(File.applicationStorageDirectory.nativePath+"/"+fileARG+".txt"),FileMode.READ);				var mystring:String=fr.readUTF().toString();				fr.close();				/*				var myFile:File = File.appResourceDirectory; // Create out file object and tell our File Object where to look for the file				myFile = myFile.resolve("mySampleFile.txt"); // Point it to an actual file								var fileStream:FileStream = new FileStream(); // Create our file stream				fileStream.open(myFile, FileMode.READ);								var fileContents:String = fileStream.readUTFBytes(fileStream.bytesAvailable); // Read the contens of the 				fileContents_txt.text = fileContents; // Display the contents. I've created a TextArea on the stage for display								fileStream.close(); // Clean up and close the file stream*/				ret=mystring;				trace ("read: "+ret);			} catch(e:Error) {				ret= "0";				trace ("error"+e);			}						return ret;		}		public function ReadStored(fileARG:String):String		{			var ret:String= "0";			try {				var fr:FileStream=new FileStream();					fr.open(new File(File.applicationDirectory.nativePath+"/"+fileARG+".txt"),FileMode.READ);;				var mystring:String=fr.readUTFBytes(fr.bytesAvailable).toString();				fr.close();				ret=mystring;				trace (ret);			} catch(e:Error) {				ret= "0";				trace ("error"+e);			}						return ret;		}		/*		////////////////////////////////////////////		public function copyFile(ARG_file:String): void {						// check to see if the file exists						file = File.applicationStorageDirectory.resolvePath("data/" + ARG_file);						// if it doesn't exist			if (!file.exists) {				// get the file that we included with the application  								originalFile = File.applicationDirectory.resolvePath("data/" + ARG_file);								// open and “READ” the content of the file				var fileStream:FileStream = new FileStream();				fileStream.open(originalFile, FileMode.READ);				var fileContent:String = fileStream.readUTF();				fileStream.close();								// create the new file 				var applicationStorageDirectoryPath:File = File.applicationStorageDirectory;				var nativePathToApplicationStorageDirectory:String = applicationStorageDirectoryPath.nativePath.toString();				nativePathToApplicationStorageDirectory += "/data/" + ARG_file;				file = new File(nativePathToApplicationStorageDirectory);								// write the contents from the other file to the new file				var writeStream:FileStream = new FileStream();				writeStream.open(file, FileMode.WRITE);				writeStream.writeUTF(fileContent);//writeStream.writeUTF(str);				writeStream.close();			}		}						public function readFile(ARG_file:String):String {			// get the file that we included with the application  						var file:File = File.applicationStorageDirectory.resolvePath("data/" + ARG_file);						// open and “READ” the content of the file			var fileStream:FileStream = new FileStream();			fileStream.open(originalFile, FileMode.READ);			var fileContent:String = fileStream.readUTF();			fileStream.close();			return fileContent;								}				public function writeFile(ARG_file:String, ARG_content:String):void {						// find the file   			var applicationStorageDirectoryPath:File = File.applicationStorageDirectory;			var nativePathToApplicationStorageDirectory:String = applicationStorageDirectoryPath.nativePath.toString();			nativePathToApplicationStorageDirectory += "/data/" + ARG_file;			file = new File(nativePathToApplicationStorageDirectory);						// write the contents parameter			var writeStream:FileStream = new FileStream();			writeStream.open(file, FileMode.WRITE);			writeStream.writeUTF(ARG_content);			writeStream.close();					}				*/																																		////////////////////////////////////////	}}